// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20200307205704_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.Agency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgencyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyFareUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyLang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyTimezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("Data.Models.Attributions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributionEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributionPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributionUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsOperator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsProducer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attributions");
                });

            modelBuilder.Entity("Data.Models.Calendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saturday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sunday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thursday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timepoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tuesday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wednesday")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Calendar");
                });

            modelBuilder.Entity("Data.Models.CalendarDates", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalendarDates");
                });

            modelBuilder.Entity("Data.Models.FareAttributes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FareId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transfers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FareAttributes");
                });

            modelBuilder.Entity("Data.Models.FareRules", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FareId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferDuration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FareRules");
                });

            modelBuilder.Entity("Data.Models.FeedInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FeedContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedContactUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedLang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedPublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedPublisherUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeedInfo");
                });

            modelBuilder.Entity("Data.Models.Frequencies", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExactTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadwaySecs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapeDistTraveled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("Data.Models.Levels", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReversedSignpostedAs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("Data.Models.Pathways", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromStopId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBidirectional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxSlope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinTransferTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathwayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathwayMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReversedSignpostedAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignpostedAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StairCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToStopId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraversalTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pathways");
                });

            modelBuilder.Entity("Data.Models.Routes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteSortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteTextColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Data.Models.Shapes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapeDistTraveled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapePtLat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapePtLon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapePtSequence")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shapes");
                });

            modelBuilder.Entity("Data.Models.StopTimes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArrivalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BikesAllowed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropOffType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapeDistTraveled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopHeadsign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopSequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timepoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StopTimes");
                });

            modelBuilder.Entity("Data.Models.Stops", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgencyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentStation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopLat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopLon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopTimezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WheelchairBoarding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("Data.Models.Transfers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExactTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromStopId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinTransferTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToStopId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("Data.Models.Translations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FeedContactUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordSubId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Translation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("Data.Models.Trips", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikesAllowed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteSortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripHeadsign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WheelchairAccessible")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
